security:
  # https://symfony.com/doc/current/security/authenticator_manager.html
  # https://symfony.com/doc/current/security.html#c-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    App\Entity\User:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    admin:
      context: website
      pattern: ^/admin
      lazy: true
      provider: app_user_provider
      access_denied_handler: App\Security\Handler\AccessAdminDeniedHandler
      entry_point: App\Security\EntryPoint\AuthenticationAdminEntryPoint
      custom_authenticators:
        - App\Security\Authenticator\Admin\LoginFormAuthenticator
      remember_me:
        secret: '%kernel.secret%'
        lifetime: 1209600 #2 week (604800 - 1 week)
        path: /admin/
      logout:
        path: admin_security_logout
    front:
      context: website
      lazy: true
      provider: app_user_provider
      access_denied_handler: App\Security\Handler\AccessFrontDeniedHandler
      entry_point: App\Security\EntryPoint\AuthenticationFrontEntryPoint
      custom_authenticator:
        - App\Security\Authenticator\Front\LoginFormAuthenticator
      remember_me:
        secret: '%kernel.secret%'
        lifetime: 1209600 #2 week (604800 - 1 week)
        path: /
      logout:
        path: main_logout
        # where to redirect after logout
        # target: app_any_route

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication
      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  role_hierarchy:
    ROLE_SUPER_ADMIN: ROLE_ADMIN
    ROLE_ADMIN: ROLE_USER

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    # >>> All
    - { path: ^/admin/login }
    - { path: ^/admin/logout }
    # All <<<

    # >>> Admin Zone
    - { path: ^/admin/user, roles: ROLE_SUPER_ADMIN }
    - { path: ^/admin, roles: ROLE_ADMIN }
    # Admin Zone <<<

    # >>> Front Zone
    - { path: ^/profile, roles: ROLE_USER }
    # Front Zone <<<
